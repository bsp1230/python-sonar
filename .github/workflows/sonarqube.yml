name: SonarQube Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonarqube:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'  # Use the version you need

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: SonarQube Scan
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # SonarQube Token (Add to GitHub secrets)
      run: |
        pip install pysonar-scanner
        pysonar-scanner \
          -Dsonar.projectKey=bsp1230 \
          -Dsonar.sources=. \
          -Dsonar.host.url= https://sonarcloud.io/project/overview?id=bsp1230_python-sonar\
          -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
          -Dsonar.python.coverage.reportPaths=coverage.xml
    - name: Quality Gate Check
      id: sonar-quality-gate
      env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |

        # Wait a bit for the analysis to complete
        sleep 30

        # Check the Quality Gate status from SonarCloud
        quality_gate_status=$(curl -s -u ${SONAR_TOKEN}: \
          "https://sonarcloud.io/api/qualitygates/project_status?projectKey=bsp1230_python-sonar" | \
          jq -r '.projectStatus.status')

        # Output the quality gate status
        echo "Quality Gate Status: $quality_gate_status"

        # Fail the build if the Quality Gate fails
        if [ "$quality_gate_status" != "OK" ]; then
          echo "Quality Gate failed!"
          exit 1
        else
          echo "Quality Gate passed!"
        fi
          
